根据参考的开源代码及一些思路讲解的博客，学习了Swing界面编程设计，使用JFrame和JPanel进行java窗口可视化开发，并借鉴了疫情仿真程序整体思路进行改造制作。
参考代码：
author:Bruce Young
b站演示视频：https://www.bilibili.com/video/av86478875?spm_id_from=333.788.b_765f64657363.1
github网址：https://github.com/KikiLetGo/VirusBroadcast

仿真场景：划定区域，设置一个社区（宽800，高800），人口总数8000人，以中心点（400，400）高斯分布（正态分布），随机设置3个病源。
代码思路：
一、整体思路
    以（400,400）为中心，在800*800区域（社区）内按高斯分布随机生成8000人的坐标，每个人设置健康值（80-100），在人群中随机选择3人成为病源，病源健康值受病毒危害减少，免疫力抵抗增加。病源通过移动，在传染范围内按传染率进行传染，接触但未被传染人潜伏期后变为健康人，接触被传染人在潜伏期过后变为病源，潜伏期期间健康值减少少量。特定时间产生警示通告，人群按戴口罩意愿进行口罩防护，人群移动意愿降低进行居家隔离。一段时间后建成隔离医院，病源按去医院意愿自愿进入医院治疗，设置社区防控人员对病源及疑似人群进行送诊，医院治疗结束后变为健康人回到社区。

二、设计思路
  1、人群：
     健康人 HEALTH100 白色点
     接触病源未感染人（潜伏期后变为健康人）HEALTH90 绿色点
     接触病源感染人（潜伏期后变为病源）HEALTH50 黄色点
     病源 HEALTH25 红色点
     死亡 DEATH 黑色点
     接触病源感染人医院隔离 FREEZE50
     病源医院隔离 FREEZE25
  2、疫情传播：
     传染距离 VIRUS_DISTANCE：两人（点）之间距离小于传染距离，可能被传染
     传染率 HITS：随机数小于传染率，被传染
     戴口罩防护 MASK_WISH：随机数小于戴口罩意愿，设置戴口罩，传染率减半
     居家隔离（移动意愿 MOVE_WISH极低）：随机数大于移动意愿，不允许移动
     医院治疗（Hospital_WISH）：随机数小于去医院治疗意愿，病源自愿入院治疗
  3、社会事件：
     居家隔离公告：发布后，降低移动意愿居家隔离，加入戴口罩防护
     隔离医院建成公告：1）发布后，病源自愿入院治疗2）加入社区防控人员，可以随意移动，寻找疑似人员入院治疗
  4、人健康情况：
     健康值（80-100）
     免疫力（增加健康值）
     死亡（健康值0）
  5、病毒：
     病毒危害（降低健康值）
     潜伏期：潜伏期期间人健康值减少少量，不会死亡
     发病：人健康值随机减少，会死亡
  6、医院：
     床位数量：不够时显示急需床位数量
     接诊：1）社区人员送诊2）病源自愿入院治疗
     检测：潜伏期带病人及病源入住，分配床位
     治疗：1）病毒危害降低健康值，人免疫力增加健康值，医院治疗增加健康值2）治疗结果：健康值=100出院，恢复健康，空出床位；健康值=0，死亡，不空床位

三、实现思路
  1、Main.java
     1.1人群初始化：
        1.1.1随机设定人的位置（高斯分布，以400,400为中心）、健康值（80-100）
        1.1.2随机选择3个人设置为病源
        1.1.3随机选择15人设置为社区人员（用于社区防控）
     1.2初始化窗口进行显示，面板进行绘制
  2、MyPanel.java（继承JPanel，用于绘制）
     2.1 paint()方法进行绘制
        2.1.1对整个人群集合遍历
        2.1.2如果是隔离人，不再绘制
        2.1.3调用人移动函数move()
        2.1.4对人的健康值结算clearHealth()
        2.1.5不同状态的人（点）用不同颜色绘制
        2.1.6绘制文字信息
        2.1.7特定时间后出通告、医院、社区防控人员
     2.2 重复定时刷新，世界时间++
  3、Person.java
     3.1使用不同状态标记不同的人
     3.2每个人是一个点（x,y）
     3.3move()方法控制人移动
        3.3.1如果人死亡，不能移动，直接返回
        3.3.2发布通告后，根据戴口罩意愿，对人设置戴口罩
        3.3.3如果是社区防控人员，进行检测操作，判断观察范围内每一个人（全部人）状态，如果满足条件（疑似+病源），调用医院的接诊接口
        3.3.4医院建成后，如果去医院的意愿大于设定，自愿进医院治疗
        3.3.5判定移动意愿，如果移动意愿大于设定并且不是社区防控人员，不允许移动，直接返回
        3.3.6人移动：小范围移动，且点不要超过边界
        3.3.7移动后发生感染事件
             3.3.7.1如果当前人的状态已经不适合被传染，无需判定（已经被传染或死亡）
             3.3.7.2使用每一个人与患病的人进行比对，计算两者间的距离
             3.3.7.3距离在不可传染范围内，直接检测下一个人
             3.3.7.4如果距离在传染范围内，看是否被命中（戴口罩传染率减半）
             3.3.7.5被命中，修改对应人的状态，被传染的人加入病源集合中,染病疑似++，健康--
             3.3.7.6假如已经传染成功，无需再进行判定，直接返回
             3.3.7.7未传染成功但疑似，继续判定，未染病疑似++，健康--
        3.3.8健康值结算
             3.3.8.1接触未感染的人，潜伏期后变为健康人，未染病疑似--，健康++
             3.3.8.2无病毒的人、已经死亡的人不结算
             3.3.8.3接触感染的人，潜伏期未到不发病,健康值减少少量，不会死亡，到了变为病源 
             3.3.8.4病源，健康值-病毒伤害+免疫力，结果保存到原始人的健康值中
             3.3.8.5病源检测健康值小于等于0时死亡，病源--，死亡++
  4、Hospital.java
     4.1单例控制只创建一个医院
     4.2创建床位并初始化坐标
     4.3绘制医院
     4.4医院接诊（社区人员送诊、自愿就诊）：先检测，再治疗
     4.5医院检测（疑似带病+病源）
     4.6医院治疗：分配床位，修改状态为隔离
     4.7治疗健康值结算
        4.7.1没有人使用的病床不结算、已经死亡的不结算
        4.7.2健康值-病毒杀伤力+免疫力+医院治疗
        4.7.3满血复活：健康值大于等于100，修改状态为健康，对应人群--，健康++
        4.7.4死亡：健康值小于等于0时死亡，对应人群--，死亡++

  5、MathUtil.java（数学算法工具类）
     5.1人的点坐标随机高斯数生成（初始化和移动用到）
     5.2人与人之间距离计算
  6、Parameter.java（模拟参数类）
     6.1统计不同状态人数参数（健康、疑似不带病、疑似带病、带病、死亡）
     6.2病毒信息参数（传染率、传染距离、潜伏期）
     6.3人意愿参数（移动、戴口罩、去医院）
     6.4世界时间参数
     6.5显示参数（区域宽高、消息显示基础坐标、消息显示速度、消息显示宽度）
  7、Print.java（打印通告信息类）
  8、Point.java（人的点坐标类）
  9、PersonPool.java（多人信息集合类）
     多人信息集合建立（总体人群、带病毒人群、观察者人群）
  10、Virus.java（病毒信息类）
     10.1单例控制只创建一个病毒
     10.2病毒杀伤力随机（3-6）
  11、Bed.java（病床信息类）
     11.1设置坐标、初始颜色
     11.2有人时设置对应颜色
     11.3获取对应颜色

运行结果：
（由于txt文档中不能插入图片，故使用文字描述，具体可视化结果将在ppt中展示）
  1、仿真设定总人数8000人，区域面积800*800，发病人数3人。
  2、仿真开始后，初期全部人员（白色）都可以小范围移动，病源（红色）大面积传染周围人群为潜伏期带病人群（黄色）。
  3、潜伏期过后，潜伏期带病人群变为病源（红色），特定时间（世界时间18）发布通告，警示人群居家隔离不要移动，降低人群移动意愿，传染基本停止。
  4、一段时间后（世界时间28）发布通告隔离医院建成，病源自愿进入医院治疗，（世界时间35）出现社区防控人员，捕捉疑似人员及病源到医院送诊，当医院床位不够时，显示急需病床数。
  5、人设置健康值和免疫力，病毒设置危害值（3-6），医院设置治疗值，通过健康值的变化判断人的不同状态，健康值100健康（白色），可出院，健康值0死亡（黑色）。




